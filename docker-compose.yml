volumes:
  postgres-data:
    driver: local
  kestra-data:
    driver: local

networks:
  kestra-psql:
    driver: bridge
  proxy-kestra:
    driver: bridge

services:
  haproxy:
    image: haproxy:3.1.0-alpine
    ports: 
    - "${HTTP_BIND}:80"
    - "${HTTPS_BIND}:443"
    networks: [proxy-kestra]
    volumes: 
      - ./config/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg 
      - ./config/cert.pem:/cert/cert.pem
    env_file: ./config/haproxy.env


  postgres:
    image: postgres
    networks: [kestra-psql]
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 10

  kestra:
    image: kestra/kestra:latest
    pull_policy: always
    env_file:
    - .env_encoded
    user: "root"
    command: server standalone
    networks: [proxy-kestra,kestra-psql]
    volumes:
      - kestra-data:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/kestra-wd:/tmp/kestra-wd
    environment:
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://postgres:5432/kestra
            driverClassName: org.postgresql.Driver
            username: kestra
            password: kestra
        kestra:
          
          server:
            basicAuth:
              enabled: true
              username: "$KESTRA_USERNAME" # it must be a valid email address
              password: $KESTRA_PASSWORD
          repository:
            type: postgres
          storage:
            type: local
            local:
              basePath: "/app/storage"
          queue:
            type: postgres
          tasks:
            tmpDir:
              path: /tmp/kestra-wd/tmp
          url: ${DOMAIN_NAME}/kestra
    depends_on:
      postgres:
        condition: service_started
